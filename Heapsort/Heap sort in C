#include<stdio.h>

void swap(int *a,int *b)
{
  int c=*a;
  *a=*b;
  *b=c;
}

void MAX_HEAPIFY(int *A,int i,int n)
{
  int l= 2*i+1;
  int r= 2*i+2;
  int largest=i;
  if (l < n && A[l]>A[largest])
  {
    largest=l;
  }

  if (r < n && A[r] > A[largest])
  {
    largest = r;
  }
  if(largest!=i)
  {
    swap(&A[i],&A[largest]);
    MAX_HEAPIFY(A,largest,n);
  }
}

void BUILD_MAX_HEAP(int *A,int n)
{
  
  for (int i= n/2-1;i>=0;i--)
    {
        MAX_HEAPIFY(A,i,n);
    }

}

void Heapsort(int *A,int n)
{
    BUILD_MAX_HEAP(A,n);
    for(int i=n-1;i>0;i--)
    {
        swap(&A[0],&A[i]);
        MAX_HEAPIFY(A,0,i);
    }
}
int main()
{
    int n;
    scanf("%d",&n);
    int A[n];
    for (int i=0;i<n;i++)
    {
        scanf("%d",&A[i]);
    }
    Heapsort(A,n);
    for (int i=0;i<n;i++)
    {
        printf("%d ",A[i]);
    }
    return 0;
}
